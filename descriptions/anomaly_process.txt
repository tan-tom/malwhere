==================== 異変の説明 ====================
内容:
  'yes' コマンドをバックグラウンドで 2 プロセス起動し続ける。
  'yes' は無限に文字列を出力し続けるため、CPU を高負荷にする。
  ps コマンドで調べると、意図しない 'yes' プロセスが複数走っているのが確認できる。

特徴的な挙動:
  - ps aux で 'yes' プロセスが常駐。
  - ユーザーが起動した覚えのないプロセスが存在。
  - CPU 使用率が上昇。

異常性:
  - 通常運用で 'yes' がバックグラウンドで複数常駐することは稀。
  - 攻撃者によるリソース浪費（DoS）や隠し動作の疑い。

==================== 学習ポイント ====================
- ps コマンドの役割:
  - 実行中の PID, ユーザー, コマンド内容を確認可能。
- 攻撃者の手法:
  - 不要なプロセスを大量起動し、リソースを枯渇。
  - 正規コマンドを悪用して不審な活動を隠蔽。
- 防御策:
  - 不審なプロセスを kill 。
  - systemd, auditd, 監視ツールで起動プロセスをログ化。
  - プロセスの起動元（コマンド履歴やスクリプト）を追跡。

==================== 観察方法（コマンド例／防御的な観点で） ====================
- プロセス一覧を確認:
  ps aux | grep yes
- CPU 負荷を確認:
  top

==================== マルウェア／攻撃の事例（概念的） ====================
- DoS 型マルウェア:
  - CPU やメモリを意図的に消費し、システム性能を低下。
- マイニングマルウェア:
  - 無限ループや負荷をかけ続けるプロセスがバックグラウンドに常駐。
- 偽装プロセス:
  - 本来のユーティリティを悪用して不審な活動を実施。